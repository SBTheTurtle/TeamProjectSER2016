import java.awt.Color;

public class Board {
	private Position[][] gameBoard = null;
	
	public Board(){
		gameBoard = new Position[34][30];
		int[][] boardArray = 
			{
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
				{0,1,2,2,2,2,2,2,1,2,2,2,2,2,1,1,2,2,2,2,2,1,2,2,2,2,2,2,1,0},
				{0,1,2,1,1,1,1,2,1,2,1,1,1,2,1,1,2,1,1,1,2,1,2,1,1,1,1,2,1,0},
				{0,1,3,1,0,0,1,2,1,2,1,0,1,2,1,1,2,1,0,1,2,1,2,1,0,0,1,3,1,0},
				{0,1,2,1,1,1,1,2,1,2,1,1,1,2,1,1,2,1,1,1,2,1,2,1,1,1,1,2,1,0},
				{0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0},
				{0,1,2,1,1,1,1,2,1,1,2,1,1,1,1,1,1,1,1,2,1,1,2,1,1,1,1,2,1,0},
				{0,1,2,1,1,1,1,2,1,1,2,1,1,1,1,1,1,1,1,2,1,1,2,1,1,1,1,2,1,0},
				{0,1,2,2,2,2,2,2,1,1,2,2,2,2,1,1,2,2,2,2,1,1,2,2,2,2,2,2,1,0},
				{0,1,1,1,1,1,1,2,1,1,1,1,1,2,1,1,2,1,1,1,1,1,2,1,1,1,1,1,1,0},
				{0,0,0,0,0,0,1,2,1,1,1,1,1,2,1,1,2,1,1,1,1,1,2,1,0,0,0,0,0,0},
				{0,0,0,0,0,0,1,2,1,1,1,1,1,2,1,1,2,1,1,1,1,1,2,1,0,0,0,0,0,0},
				{0,0,0,0,0,0,1,2,1,1,0,0,0,0,0,0,0,0,0,0,1,1,2,1,0,0,0,0,0,0},
				{0,0,0,0,0,0,1,2,1,1,0,1,1,1,0,0,1,1,1,0,1,1,2,1,0,0,0,0,0,0},
				{0,1,1,1,1,1,1,2,1,1,0,1,0,0,0,0,0,0,1,0,1,1,2,1,1,1,1,1,1,0},
				{0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0},
				{0,1,1,1,1,1,1,2,1,1,0,1,0,0,0,0,0,0,1,0,1,1,2,1,1,1,1,1,1,0},
				{0,0,0,0,0,0,1,2,1,1,0,1,0,0,0,0,0,0,1,0,1,1,2,1,0,0,0,0,0,0},
				{0,0,0,0,0,0,1,2,1,1,0,1,1,1,1,1,1,1,1,0,1,1,2,1,0,0,0,0,0,0},
				{0,0,0,0,0,0,1,2,1,1,0,0,0,0,0,0,0,0,0,0,1,1,2,1,0,0,0,0,0,0},
				{0,0,0,0,0,0,1,2,1,1,0,1,1,1,1,1,1,1,1,0,1,1,2,1,0,0,0,0,0,0},
				{0,1,1,1,1,1,1,2,1,1,0,1,1,1,1,1,1,1,1,0,1,1,2,1,1,1,1,1,1,0},
				{0,1,2,2,2,2,2,2,2,2,2,2,2,2,1,1,2,2,2,2,2,2,2,2,2,2,2,2,1,0},
				{0,1,2,1,1,1,1,2,1,1,1,1,1,2,1,1,2,1,1,1,1,1,2,1,1,1,1,2,1,0},
				{0,1,2,1,1,1,1,2,1,1,1,1,1,2,1,1,2,1,1,1,1,1,2,1,1,1,1,2,1,0},
				{0,1,3,2,2,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,2,2,3,1,0},
				{0,1,1,1,2,1,1,2,1,1,2,1,1,1,1,1,1,1,1,2,1,1,2,1,1,2,1,1,1,0},
				{0,1,1,1,2,1,1,2,1,1,2,1,1,1,1,1,1,1,1,2,1,1,2,1,1,2,1,1,1,0},
				{0,1,2,2,2,2,2,2,1,1,2,2,2,2,1,1,2,2,2,2,1,1,2,2,2,2,2,2,1,0},
				{0,1,2,1,1,1,1,1,1,1,1,1,1,2,1,1,2,1,1,1,1,1,1,1,1,1,1,2,1,0},
				{0,1,2,1,1,1,1,1,1,1,1,1,1,2,1,1,2,1,1,1,1,1,1,1,1,1,1,2,1,0},
				{0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0},
				{0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0}
			};
		
		
		for (int i = 0; i < 34; i++)
		{
			for (int j = 0; j < 30; j++)
			{
				if(boardArray[i][j] == 0){
					gameBoard[i][j] = new Position(false, true, false);
				}
				// Draw wall positions for array values of 1
				if (boardArray[i][j] == 1)
				{
					gameBoard[i][j] = new Position(true, false, false);
				} // end if
				// Draw pellet positions for array values of 2
				if (boardArray[i][j] == 2)
				{
					gameBoard[i][j] = new Position(false, false, true);
				}
				// Draw power pellets for array values of 3
				if (boardArray[i][j] == 3)
				{
					gameBoard[i][j] = new Position(false, false, true);
				}			
			} // end inner for loop
		} // end outer for loop
		
		
		
		/*
		for(int i = 0; i < 32; i++){
			for(int j = 0; j < 28; j++){
				if(i == 0){
					gameBoard[i][j] = new Position(true);
				}
				if(i == 1){
					if(j == 13 || j == 0 || j == 27){
						gameBoard[i][j] = new Position(true);
					}
					else{
						gameBoard[i][j] = new Position(false);
					}
				}
				else if(i == 2 || i == 3){
					if(j == 0 || (j >= 2 && j <= 5) || (j >= 7 && j <= 11) || j == 13 || (j >= 15 && j <= 19 ) || (j >= 21 && j <= 25) || j == 27){
						gameBoard[i][j] = new Position(true);
					}
					else{
						gameBoard[i][j] = new Position(false);
					}
				}
				else if(i == 4){
					if(j == 0 || j == 27){
						gameBoard[i][j] = new Position(true);
					}
					else{
						gameBoard[i][j] = new Position(false);
					}
				}
				else if(i >= 5 && i <=10){
					if(j == 0 || (j >= 2 && j <= 5) || (j >= 7 && j <= 11) || j == 13 || (j >= 15 && j <= 19 ) || (j >= 21 && j <= 25) || j == 27){
						gameBoard[i][j] = new Position(true);
					}
					else{
						gameBoard[i][j] = new Position(false);
					}
				}
				else{
					gameBoard[i][j] = new Position(true);
				}
				
			}
		}
		*/
	}
	
	public Position[][] getGameboard(){
		return gameBoard;
	}

}
